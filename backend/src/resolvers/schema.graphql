# import * from '../generated/prisma.graphql'

type SuccessMessage {
  message: String
}

type Query {
  users: [User!]!
  me: User
  payment: PaymentDetails
  plans(billingCycle: String!): [Plan]
}

type Mutation {
  signup(
    email: String!
    password: String!
    confirmPassword: String!
    isArtist: Boolean!
  ): User!
  verifyEmail(email: String!, emailConfirmToken: Float!): LoginResponse!
  signin(email: String!, password: String!): LoginResponse!
  signout: SuccessMessage
  createPaymentMethod(tokenId: String!): User
  createSubscription(planId: String!): User
  updateSubscription(planId: String!): User
  createPhoto(file: File): Photo
  updatePhoto(file: file): Photo
  softRemovePhoto: SuccessMessage
  removePhoto: SuccessMessage
}

type LoginResponse {
  token: String!
  user: User!
}

type PaymentDetails {
  id: String
  object: String
  address: Address
  balance: Float
  created: DateTime
  currency: String
  currencySymbol: String
  default_source: String
  delinquent: Boolean
  description: String
  discount: String
  email: String
  invoice_prefix: String
  invoice_settings: InvoiceSettings
  livemode: Boolean
  name: String
  phone: String
  preferred_locales: [String]
  shipping: Shipping
  sources: [Source]
}

type Address {
  line1: String
  city: String
  country: String
  line2: String
  postal_code: String
  state: String
}

type InvoiceSettings {
  custom_fields: [String]
  default_payment_method: String
  footer: String
}

type Plan {
  id: String
  object: String
  active: Boolean
  aggregate_usage: Float
  amount: Float
  amount_decimal: Float
  billing_scheme: String
  created: DateTime
  currency: String
  currencySymbol: String
  discount: String
  info: [PlanInfo]
  interval: String
  interval_count: Float
  livemode: Boolean
  nickname: String
  product: String
  tiers: String
  tiers_mode: String
  transform_usage: Float
  trial_period_days: Float
  usage_type: String
}

type PlanInfo {
  title: String
  active: Boolean
}

type Shipping {
  address: Address
  name: String
  phone: String
}

type Source {
  id: String
  account_holder_name: String
  account_holder_type: String
  bank_name: String
  country: String
  cvc: Float
  last4: Float
  status: String
  description: String
  brand: String
  exp_month: Float
  exp_year: Float
  funding: String
  name: String
  object: String
}
