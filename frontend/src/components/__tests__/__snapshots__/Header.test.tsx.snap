// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header snapshot renders correctly 1`] = `
<View
  accessibilityIgnoresInvertColors={true}
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "#202124",
      "borderBottomColor": "#f2f2f2",
      "borderBottomWidth": 0,
      "elevation": 23,
      "flexDirection": "row",
      "height": 64,
      "justifyContent": "space-between",
      "paddingHorizontal": 10,
      "paddingTop": 20,
      "shadowColor": "#202124",
      "shadowOffset": Object {
        "height": 10,
        "width": 0,
      },
      "shadowOpacity": 1,
      "shadowRadius": 10,
    }
  }
>
  <Image
    style={
      Array [
        Object {
          "bottom": 0,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "top": 0,
        },
        Object {
          "height": 64,
          "width": undefined,
        },
        undefined,
      ]
    }
    testID="headerContainer"
  />
  <View
    style={
      Object {
        "alignItems": "flex-start",
        "flex": 1,
      }
    }
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "flexDirection": "row",
          "width": 150,
        }
      }
    >
      <View>
        <View
          accessible={true}
          isTVSelectable={true}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "alignItems": "center",
              "backgroundColor": "transparent",
              "justifyContent": "center",
            }
          }
        >
          <Text />
        </View>
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 3,
      }
    }
  >
    <View
      accessible={true}
      isTVSelectable={true}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
    >
      <Image
        source={1}
        style={
          Object {
            "height": 35,
            "resizeMode": "cover",
            "width": 70,
          }
        }
      />
    </View>
  </View>
  <View
    style={
      Object {
        "alignItems": "flex-end",
        "flex": 1,
      }
    }
  />
</View>
`;
